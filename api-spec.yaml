openapi: 3.0.0
info:
  title: Каталог товаров API
  description: API для управления каталогом товаров с административной панелью
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Основной сервер для клиентской части
  - url: http://localhost:3000
    description: Административный сервер

components:
  schemas:
    Product:
      type: object
      required:
        - name
        - description
        - price
        - category
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор товара
          example: 1678912345678
        name:
          type: string
          description: Название товара
          example: "Товар 1"
        description:
          type: string
          description: Описание товара
          example: "Описание товара 1"
        price:
          type: number
          description: Цена товара
          example: 100
        category:
          type: array
          items:
            type: string
          description: Список категорий товара
          example: ["категория1", "категория2"]
    
    Error:
      type: object
      properties:
        message:
          type: string
          description: Сообщение об ошибке

paths:
  /products:
    get:
      summary: Получить список всех товаров
      description: Возвращает массив всех товаров в каталоге
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Добавить новый товар
      description: Добавляет новый товар в каталог
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - price
                - category
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                category:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Товар успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID товара
        schema:
          type: integer
          format: int64
    
    get:
      summary: Получить товар по ID
      description: Возвращает информацию о конкретном товаре
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    put:
      summary: Обновить товар
      description: Обновляет информацию о существующем товаре
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                category:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Товар успешно обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Товар не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    delete:
      summary: Удалить товар
      description: Удаляет товар из каталога
      responses:
        '200':
          description: Товар успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product deleted"
        '404':
          description: Товар не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 